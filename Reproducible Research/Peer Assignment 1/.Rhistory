b <- as.numeric(levels(a))
b
a
a <- data2[1:190,4]
a
View(data2)
a <- data2[4,1:190]
a <- data2[1:190,5]
a
a <- gsub(',', '', a)
a
str(a)
b <- as.numeric(a)
mean(b)
a <- data2[1:190,5]
data2
countryNames <- data2$X.3
countryNames
grep("^United", countryNames)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'quiz441.csv')
gdp <- read.csv2('quiz441.csv', sep = ',')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', 'quiz442.csv')
edu <- read.csv2('quiz442.csv', sep= ',')
head(edu)
library(plyr)
edu <- tbl_df(edu)
edu
gdp <- tbl_df(gdp)
gdp
gdp <- read.csv2('quiz441.csv', sep = ',', skip = 4)
View(gdp)
select(gdp, X, X.1)
gdp2 <- select(gdp, X, X.1)
gdp2
str(gdp2)
View(gdp2)
gdp3 <- gdp2[complete.cases(gdp2),]
View(gdp3)
str(gdp2)
gdp3 <- gsub('', NA, gdp2)
?gsub
gdp3 <- as.character(gdp2)
gdp2$X.1 <- as.numeric(gdp2$X.1)
gdp2 <- select(gdp, X, X.1)
sub("", 'NA', gdp2$X.1)
gdp3 <- sub("", 'NA', gdp2$X.1)
gdp3 <- gdp2
gdp3$X.1 <- sub('', 'NA', gdp3$X.1)
View(gdp3)
gdp3 <- gdp2
View(gdp2)
View(gdp3)
replace(gdp3, gdp3$X.1 == "", NA)
View(gdp3)
gdp3 <- as.character(gdp3)
gdp3
View(gdp2)
gdp3 <- gdp2
gdp3$X.1 <- as.character(gdp3$X.1)
View(gdp3)
gdp3$X.1[gdp3$X.1 == ''] <- "NA"
View(gdp3)
gdp4 <- gdp3[1:190,]
View(gdp4)
str(gdp4)
View(edu)
View(gdp)
rename(gdp4, CountryCode = X, rank = X.1 )
gdp4 <- rename(gdp4, CountryCode = X, rank = X.1 )
a <- merge(edu, gdp4)
View(a)
View(edu)
names(edu)
names(a)
?grep
grep('[Ff]iscal year end', a$Special.Notes)
grep('[Ff]iscal year end: [Jj]', a$Special.Notes)
grep('[Ff]iscal year end: [Jj]une', a$Special.Notes)
library(quantmod)
install.packages("quantmod")
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols('AMZN', auto.assign=FALSE)
sampleTime = index(amzn)
head(sampleTime)
?grepl
year(sampleTime)
table(year(sampleTime))
wday(SampleTIME, label = TRUE)
wday(sampleTIME, label = TRUE)
wday(sampleTime, label = TRUE)
table(year(sampleTime) & wday(sampleTime, label = TRUE))
a <- sampleTime[year(sampleTime) == 2012]
a
a <- sampleTime[year(sampleTime) == 2012 & wday(sampleTime) == Monday]
a <- sampleTime[year(sampleTime) == 2012 & wday(sampleTime) == 'Monday']
a
a <- sampleTime[year(sampleTime) == 2012 && wday(sampleTime) == 'Monday']
a
a <- sampleTime[year(sampleTime) == 2012]
wday(a)
a <- sampleTime[year(sampleTime) == 2012 && wday(sampleTime) == 2]
a <- sampleTime[year(sampleTime) == 2012]
a
b <- a[wday(a) == 2]
b
b <- a[wday(a) == 'Monday']
b <- a[wday(a) == 2]
library('swirl')
swirl()
install_from_swirl('Exploratory Data Analysis')
swirl()
install.packages('ggplot2')
swirl(0)
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(pm)
quantile(ppm)
?boxplot
boxplot(ppm, col='blue')
abline(h=12)
hist(ppm, col='green')
rug(ppm)
low
high
hist(ppm, col='green', breaks=100)
rug(ppm)
hist(ppm, col='green')
abline(v=12, lwd=2)
abline(v=median(ppm), col='magenta', lwd=4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col='wheat', main='Number of Counties in Each Region')
boxplot(y ~ x, data = pollution, col='red')
boxplot(pollution, col='red', y~x)
?boxplot
boxplot(y~x, pollution, col='red')
boxplot(pm25 ~ region, pollution, col='red')
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region == 'east')
head(east)
hist(east$pm25, col='green')
hist(subset(pollution, region == 'west'), col='green')
hist(subset(pollution$pm25, region == 'west'), col='green')
hist(subset(pollution, region == 'west'), col='green')
str(pollution)
hist(subset(pollution, region == 'west')$pm25, col='green')
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, pollution$ppm, col=pollution$region)
plot(pollution$latitude, pollution$ppm, col='pollution$region')
plot(pollution$latitude, pollution$ppm, pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region =='west')
plot(west$latitude, west$pm25, main=='West')
plot(west$latitude, west$pm25, main='West')
East <- subset(pollution, region =='East')
plot(east$latitude, east$pm25, main='East')
library('swirl')
swirl()
head(airmiles)
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = 'red', pch = 8, main = 'Big Apple Data')
xyplot(Ozone ~ Wind, data = airquality, col = 'red', pch = 8, main = 'Big Apple Data')
xyplot(Ozone ~ Wind, airquality, pch = 8, col = 'red', main = 'Big Apple Data')
xyplot(Ozone~Wind | as.factor(Month), airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | month.abb, airquality)
xyplot(Ozone ~ Wind | month.abb, airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, airquality)
p
names(p)
mynames[myfull]
p[['formula']]
p[['x.limits']]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit('plot1.R')
source('plot1.R', local = TRUE)
source(pathtofile = 'plot1.R', local = TRUE)
?source
source("plot1.R", local = TRUE)
View(pathtofile)
source(pathtofile('plot1.R'), local = TRUE)
myedit('plot2.R')
source(pathtofile('plot2.R'), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit('myLabels.R')
source(pathtofile('myLabels.R'), local = TRUE)
xyplot(price ~ carat | color * cut, diamonds, strip = FALSE, pch = 20, xlab = 'myxlab', ylab = 'myylab', main = 'mymain')
xyplot(price ~ carat | color * cut, diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color * cut, diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c('red', 'blue'))
pla(0)
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c('red', 'blue'))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c('red', 'yell'))
p2 <- colorRampPalette(c('red', 'yellow'))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c('blue', 'green'), alpha = .5)
p3(5)
plot(x, y, pch = 19, col = rgb(0,.5,.5))
plot(x, y, pch = 19, col = rgb(0,.5,.5,.3))
brewer.pal(3, 'BuGn')
cols <- brewer.pal(3, 'BuGn')
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c('point', 'smooth'))
qplot(hwy, data = mpg, color = drv)
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = 'boxplot')
qplot(drv, hwy, data = mpg, geom = 'boxplot', color = 'manufacturer')
qplot(drv, hwy, data = mpg, geom = 'boxplot', color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, why, data = mpg, facets = .~drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(why, data = mpg, facets = drv~., binwidth = 2)
qplot(hqy, data = mpg, facets = drv~., binwidth = 2)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c('point', 'smooth'), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = 'lm')
g + geom_point() + geom_smooth(method = 'lm') + facet_grid(.~drv)
ggtitle('Swirl Rules!')
g + geom_point() + geom_smooth(method = 'lm') + facet_grid(.~drv) + ggtitle('Swirl Rules!')
g + geom_point(color = 'pink', size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(color = drv) + labs(title = 'Swirl Rules!') + labs(x = 'Displacement', y = 'Hwy Mileage')
g + geom_point(aes(color = drv)) + labs(title = 'Swirl Rules!') + labs(x = 'Displacement', y = 'Hwy Mileage')
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = 'lm', se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = 'Times')
plot(myx, myy, type='l', ylim=c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line(ylim(-3,3))
g + geom_line(aes(ylim(-3,3)))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(dataset, aes(x = displ, y = hwy, color = factor(year)))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g <- geom_point()
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = 'lm', se = FALSE, size = 2, color = 'black')
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = 'lm', se = FALSE, size = 2, color = 'black') + labs(x = 'Displacement', y = 'Highway Mileage', title = 'Swirl Rules!')
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price data = diamonds, binwidth = 18497/30)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut())
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut
)
qplot(price, data = diamonds, geom = 'density')
qplot(price, data = diamonds, geom = 'density', color = cut)
qplot(carat, price, data = diamond)
qplot(carat, price, data = dataset)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth = 'lm')
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = 'lm'))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = 'lm')
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = 'lm')
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = 'lm', size = 3, color = 'pink')
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
class(airquality)
library(swirl)
swirl(0)
library(swirl)
swirl()
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col='blue')
abline(h=.4, 'red')
abline(h=.4, col = 'red')
5
abline(h=.05)
abline(h=.05, col = 'red')
info()
12
abline(h=.05, col = 'green')
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c('red', 'orange', 'purple', pch = 3, cex = 2, lwd = 2))
points(cx, cy, col = c('red', 'orange', 'purple'), pch = 3, cex = 2, lwd = 2)
mdist(cx, cy)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x,y,pch = 19, cex = 2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch - 8, cex = 2, lwd = 2)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust2])
tapply(x,newClust2, mean)
tapply(y,newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c('black', 'red', 'green'), pch = 3, cex = 3, lwd = 3)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit('addPatt.R')
source('addPatt.R', local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*% svd1$d[1]
a1 <- svd1$u[,1] %*% svd1$d[,1]
a1 <- (svd1$u[,1] %*% svd1$d[1])
a1 <- (svd1$u[,1] * svd1$d[1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% svd1$v[,1:2]
a2 <- (svd1$u[,1:2] %*% svd1$d[1:2] %*% svd1$v[,1:2]
)
a2 <- (svd1$u[,1:2] %*% svd1$d[1:2] %*% svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% svd1$v[,1:2]
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*%
)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2]
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1][wcol]])
names(pm1) <- make.names(cnames[[1][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log(x1))
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm = TRUE)
sum(mean(negative, na.rm = TRUE))
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), '%y%m%d')
dates <- as.Date(as.character(dates), %Y%m%d)
dates <- as.Date(as.character(dates), '%Y%m%d')
dates
head(daets)
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
?sapply
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(lwd = 2, median(x0sub, na.rm = TRUE)
)
?abline
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(median(x0sub, na.rm = TRUE), x0sub, lwd = 2)
abline(median(x0sub, na.rm = TRUE), 0, lwd = 2)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(pm25, na.rm = TRUE), lwd = 2)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, set = 'State')
mrg <- merge(d0, d1, by = 'State')
mrg <- merge(d0 , d1, by = 'state')
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
with(mrg, segments(mrg$mean.x,, mrg[,2]))
with(mrg, segments(mrg$mean.x, mrg[,2]))
with(mrg, segments(rep(1,52), mrg[,2]))
with(mrg, segments(rep(1,52),mrg$mean.x mrg[,2]))
with(mrg, segments(rep(1,52),mrg$mean.x, mrg[,2]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
quit
quit()
setwd("C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Reproducible Research/Course Project 1/Course-Project-1")
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip',
'dataset.zip')
unzip('dataset.zip')
data <- read.csv2('activity.csv')
setwd("C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Reproducible Research/RepData_PeerAssessment1")
