type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',inset=.02, c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), cex=.5, inset=.02)
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',inset=.05, c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), cex=.5)
?par
legend("topright", c("a", "b", "c"))
legend("topright", inset=0, c("a", "b", "c"))
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',inset=0, c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'))
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',"legend")
legend('topright',"legend", pch=21, cex=.5)
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
legend('topright',"legend")
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
legend('topright',
"legend",
cex=.75)
legend('topright',
"legend",
cex=.75,
pt.cex=1)
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
legend('topright',
"legend",
cex=.75,
pt.cex=1)
legend('topright',
"legend",
cex=.75,
pt.cex=10)
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
"legend",
cex=.75,
pt.cex=10)
dev.off()
?legend
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
"legend",
cex=.5,
pt.cex=10,
title.cex = 10)
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
"legend",
cex=.5,
pt.cex=1,
title.cex = 1)
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
"legend",
cex=.5,
pt.cex=10,
title.cex = 1)
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
"legend",
cex=.5,
pt.cex=1,
title.cex = 1)
dev.off()
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty=1,
lwd=2.5,
col=c('black', 'red', 'blue'))
dev.off()
png('plot3.png', width = 480, height = 480)
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty=1,
lwd=2.5,
col=c('black', 'red', 'blue'))
dev.off()
complete_data <- read.csv('household_power_consumption.txt',
sep=';')
# Convert Date into Date class so we can subset it.
complete_data$Date <- as.Date(complete_data$Date, '%d/%m/%Y')
# Subset the data so that we get data from 2007
wanted_data <- subset(complete_data, year(complete_data$Date) == 2007)
# Subset the data so that we can data from Feb.
wanted_data <- subset(wanted_data, month(wanted_data$Date) == 2)
# Subset the data so that we can the data from Thursday, Friday, and Saturday.
wanted_data2 <- subset(wanted_data, wanted_data$Date == '2007-02-01' |
wanted_data$Date == '2007-02-02')
# Get rid of any NAs.
wanted_data2 <- wanted_data2[complete.cases(wanted_data2),]
# Change Sub_meterings into a numeric vector
wanted_data2$Sub_metering_1 <- as.numeric(as.character(wanted_data2$Sub_metering_1))
wanted_data2$Sub_metering_2 <- as.numeric(as.character(wanted_data2$Sub_metering_2))
wanted_data2$Sub_metering_3 <- as.numeric(as.character(wanted_data2$Sub_metering_3))
# Find the first instance of Thursday and Friday
a <- match('Thurs', wday(wanted_data2$Date, label = TRUE))
b <- match('Fri', wday(wanted_data2$Date, label = TRUE))
# Get rid of any NAs.
wanted_data2 <- wanted_data2[complete.cases(wanted_data2),]
# Crate Plot 3, a line graph of the Sub Meterings
png('plot3.png', width = 480, height = 480)
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty=1,
lwd=2.5,
col=c('black', 'red', 'blue'))
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
dev.off()
complete_data <- read.csv('household_power_consumption.txt',
sep=';')
# Convert Date into Date class so we can subset it.
complete_data$Date <- as.Date(complete_data$Date, '%d/%m/%Y')
# Subset the data so that we get data from 2007
wanted_data <- subset(complete_data, year(complete_data$Date) == 2007)
# Subset the data so that we can data from Feb.
wanted_data <- subset(wanted_data, month(wanted_data$Date) == 2)
# Subset the data so that we can the data from Thursday, Friday, and Saturday.
wanted_data2 <- subset(wanted_data, wanted_data$Date == '2007-02-01' |
wanted_data$Date == '2007-02-02')
# Get rid of any NAs.
wanted_data2 <- wanted_data2[complete.cases(wanted_data2),]
# Change Global_active_power into a numeric vector
wanted_data2$Global_active_power <- as.numeric(as.character(wanted_data2$Global_active_power))
# Find the first instance of Thursday and Friday
a <- match('Thurs', wday(wanted_data2$Date, label = TRUE))
b <- match('Fri', wday(wanted_data2$Date, label = TRUE))
# Crate Plot 2, a line graph of the Global Active Power (kilowatts)
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Save as png file.
png('plot2.png', width = 480, height = 480, units = 'px')
dev.off()
dev.off()
png('plot2.png', width = 480, height = 480, units = 'px')
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
dev.off()
dev.off()
complete_data$Date <- as.Date(complete_data$Date, '%d/%m/%Y')
# Subset the data so that we get data from 2007
wanted_data <- subset(complete_data, year(complete_data$Date) == 2007)
# Subset the data so that we can data from Feb.
wanted_data <- subset(wanted_data, month(wanted_data$Date) == 2)
# Subset the data so that we can the data from Thursday, Friday, and Saturday.
wanted_data2 <- subset(wanted_data, wanted_data$Date == '2007-02-01' |
wanted_data$Date == '2007-02-02')
# Get rid of any NAs.
wanted_data2 <- wanted_data2[complete.cases(wanted_data2),]
# Change Global_active_power into a numeric vector
wanted_data2$Global_active_power <- as.numeric(as.character(wanted_data2$Global_active_power))
# Create Plot 1, a histogram of Global Active Power.
png('plot1.png', width = 480, height = 480, units = 'px')
hist(wanted_data2$Global_active_power,
xlab = 'Global Active Power (kilowatts)',
ylab = 'Frequency',
main = 'Global Active Power',
col = 'red')
dev.off()
str(wanted_data2$Voltage)
?par
names(par
)
names(par())
mfrow(c(2,2))
par()$mfrow = c(2,2)
par(mfrow = c(2,2))
:
par(mfrow = c(2,2))
# Crate Plot 1, a line graph of the Global Active Power
png('plot4.png', width = 480, height = 480, units = 'px')
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Create Plot 2, a line graph of voltage over time.
plot(as.numeric(as.character(wanted_data2$Voltage)),
type='l',
xlab = 'datetime',
ylab = 'Voltage',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Create Plot 3, a line graph of energy sub metering
# This code is from plot3.R
wanted_data2$Sub_metering_1 <- as.numeric(as.character(wanted_data2$Sub_metering_1))
wanted_data2$Sub_metering_2 <- as.numeric(as.character(wanted_data2$Sub_metering_2))
wanted_data2$Sub_metering_3 <- as.numeric(as.character(wanted_data2$Sub_metering_3))
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty=1,
lwd=2.5,
col=c('black', 'red', 'blue'))
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Create plot 4, a line graph of global reactive power vs datetime
plot(as.numeric(as.character(wanted_data2$Global_reactive_power)),
type = 'l',
xlab = 'datetime',
ylab = 'Global_reactive_power',
xaxt='n')
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
dev.off()
par(mfrow = c(2,2))
# Crate Plot 1, a line graph of the Global Active Power
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Create Plot 2, a line graph of voltage over time.
plot(as.numeric(as.character(wanted_data2$Voltage)),
type='l',
xlab = 'datetime',
ylab = 'Voltage',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Create Plot 3, a line graph of energy sub metering
# This code is from plot3.R
wanted_data2$Sub_metering_1 <- as.numeric(as.character(wanted_data2$Sub_metering_1))
wanted_data2$Sub_metering_2 <- as.numeric(as.character(wanted_data2$Sub_metering_2))
wanted_data2$Sub_metering_3 <- as.numeric(as.character(wanted_data2$Sub_metering_3))
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty=1,
lwd=2.5,
col=c('black', 'red', 'blue'))
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Create plot 4, a line graph of global reactive power vs datetime
plot(as.numeric(as.character(wanted_data2$Global_reactive_power)),
type = 'l',
xlab = 'datetime',
ylab = 'Global_reactive_power',
xaxt='n')
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
png('plot4.png', width = 480, height = 480, units = 'px')
dev.off()
par(mfrow = c(2,2))
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
dev.off()
par(mfrow = c(2,2))
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
plot(as.numeric(as.character(wanted_data2$Voltage)),
type='l',
xlab = 'datetime',
ylab = 'Voltage',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
plot.new(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
plot.new(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
par(mfrow = c(1,1))
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
par(mfrow = c(2,2))
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
png('plot4.png', width = 480, height = 480)
par(mfrow = c(2,2))
# Crate Plot 1, a line graph of the Global Active Power
plot(wanted_data2$Global_active_power,
type='l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
xaxt='n')
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Create Plot 2, a line graph of voltage over time.
plot(as.numeric(as.character(wanted_data2$Voltage)),
type='l',
xlab = 'datetime',
ylab = 'Voltage',
xaxt='n')
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Create Plot 3, a line graph of energy sub metering
# This code is from plot3.R
wanted_data2$Sub_metering_1 <- as.numeric(as.character(wanted_data2$Sub_metering_1))
wanted_data2$Sub_metering_2 <- as.numeric(as.character(wanted_data2$Sub_metering_2))
wanted_data2$Sub_metering_3 <- as.numeric(as.character(wanted_data2$Sub_metering_3))
plot(wanted_data2$Sub_metering_1,
type='l',
xlab = '',
ylab = 'Energy sub metering',
xaxt='n')
points(wanted_data2$Sub_metering_2,
type='l',
col='red')
points(wanted_data2$Sub_metering_3,
type='l',
col='blue')
legend('topright',
c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty=1,
lwd=2.5,
col=c('black', 'red', 'blue'))
# Change the x-axis tick marks
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
# Create plot 4, a line graph of global reactive power vs datetime
plot(as.numeric(as.character(wanted_data2$Global_reactive_power)),
type = 'l',
xlab = 'datetime',
ylab = 'Global_reactive_power',
xaxt='n')
axis(side=1, at=c(a,b,2880), labels=c('Thu', 'Fri', 'Sat'))
dev.off()
