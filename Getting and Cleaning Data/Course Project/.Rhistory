list_of_features[2,2]
run_analysis <- function() {
train_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/X_train.txt',
sep = '')
train_feature <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/y_train.txt',
sep = "")
list_of_features <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/features.txt',
sep = "")
num_of_train_data_col <- dim(train_data)[2]
for(i in 1:2) {
names(train_data)[i] <- features[i,2]
}
}
View(train_data)
run_analysis <- function() {
train_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/X_train.txt',
sep = '')
train_feature <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/y_train.txt',
sep = "")
list_of_features <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/features.txt',
sep = "")
num_of_train_data_col <- dim(train_data)[2]
for(i in 1:2) {
names(train_data)[i] <- features[i,2]
}
}
run_analysis()
run_analysis <- function() {
train_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/X_train.txt',
sep = '')
train_feature <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/y_train.txt',
sep = "")
list_of_features <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/features.txt',
sep = "")
num_of_train_data_col <- dim(train_data)[2]
for(i in 1:2) {
names(train_data)[i] <- list_of_features[i,2]
}
}
train_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/X_train.txt',
sep = '')
list_of_features <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/features.txt',
sep = "")
num_of_train_data_col <- dim(train_data)[2]
View(list_of_features)
list_of_features[1,2]
str(list_of_features)
list_of_features$V2 <- as.character(list_of_features$V2)
str(list_of_features)
num_of_train_data_col <- dim(train_data)[2]
for(i in 1:2) {
names(train_data)[i] <- list_of_features[i,2]
}
View(train_data)
for(i in 1:num_of_train_data_col) {
names(train_data)[i] <- list_of_features[i,2]
}
View(train_data)
View(train_data)
test_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/test/X_test.txt',
sep = '')
num_of_test_data_col <- dim(test_data)[2]
for(i in 1:num_of_test_data_col) {
names(test_data)[i] <- list_of_features[i,2]
}
View(test_data)
a <- test_data[,1:2]
b <- train_data[,1:2]
c <- merge(a,b)
View(a)
View(b)
View(c)
?merge
c <- rbind(a,b)
7352+2947
View(c)
View(a)
total_data <- rbind(test_data, train_data)
View(list_of_features)
train_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/X_train.txt',
sep = '')
train_activities <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/y_train.txt',
sep = "")
c <- merge(train_data, train_activities)
View(c)
c <- cbind(train_activities, train_data)
View(c)
c <- cbind(train_data, train_activities)
c <- cbind(train_activities, train_data)
View(c)
View(train_activities)
train_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/X_train.txt',
sep = '')
train_activities <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/y_train.txt',
sep = "")
list_of_features <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/features.txt',
sep = "")
num_of_train_data_col <- dim(train_data)[2]
list_of_features$V2 <- as.character(list_of_features$V2)
for(i in 1:num_of_train_data_col) {
names(train_data)[i] <- list_of_features[i,2]
}
total_train_data <- cbind(train_data, train_activities)
View(total_train_data)
test_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/test/X_test.txt',
sep = '')
test_activities <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/test/y_test.txt',
sep = '')
num_of_test_data_col <- dim(test_data)[2]
for(i in 1:num_of_test_data_col) {
names(test_data)[i] <- list_of_features[i,2]
}
total_test_data <- cbind(test_data, test_activities)
# Merge the two data sets together
total_data <- rbind(test_data, train_data)
total_data <- rbind(total_test_data, total_train_data)
View(total_data)
View(total_train_data)
total_train_data <- c
View(total_test_data)
View(total_data)
a <- total_data[,1:4]
View(a)
library(dplyr)
?filter
?dplyr::filter
filter(a, .*)
names(a)
z <- names(a)
class(z)
grep(".*", a)
grep(".*mean", a)
grep("mean", a)
grep("mean", z)
grep("mean | std", z)
grep("mean|std", z)
a <- total_data
z <- names(a)
class(z)
grep("mean|std", z)
a <- total_data[,1:4]
z <- names(a)
z
x <- grep("mean|std", z)
x
filter(a, x)
?subset
b <- a[x,]
b <- a[,b]
b
class(x)
b <- a[,x]
b
data_col <- names(total_data)
# Get a vector of all the column names that contain mean or std.
has_mean_or_std <- grep("mean|std", data_col)
# Use the previous vector to subset the total_data
total_data2 <- total_data[,has_mean_or_std]
View(total_data2)
View(total_data2)
has_mean_or_std <- grep("mean()|std()", data_col)
# Use the previous vector to subset the total_data
total_data2 <- total_data[,has_mean_or_std]
View(total_data2)
data_col <- names(total_data)
# Get a vector of all the column names that contain mean or std.
has_mean_or_std <- grep("mean()", data_col)
# Use the previous vector to subset the total_data
total_data2 <- total_data[,has_mean_or_std]
View(total_data2)
has_mean_or_std <- grep("mean\(\)", data_col)
total_data2 <- total_data[,has_mean_or_std]
has_mean_or_std <- grep("mean$", data_col)
has_mean_or_std <- grep("mean()$", data_col)
data_col
has_mean_or_std <- grep("mean\(", data_col)
has_mean_or_std <- grep("mean\()", data_col)
has_mean_or_std <- grep("mean\(.", data_col)
has_mean_or_std <- grep("mean\\()", data_col)
total_data2 <- total_data[,has_mean_or_std]
View(total_data2)
has_mean_or_std <- grep("mean\\()|std\\()", data_col)
# Use the previous vector to subset the total_data
total_data2 <- total_data[,has_mean_or_std]
View(total_data2)
cbind(a,totaldata[,562])
a <- b, total_data[,562]
a <- cbind(b, total_data[,562])
View(a)
View(train_activities)
train_activities == a[,5]
View(train_activities)
View(test_activities)
train_activities == a[1:2947,5]
train_activities == a[2948:10299,5]
c <- train_activities == a[2948:10299,5]
contains(is.na(c))
all(c)
total_data3 <- cbind(total_data2, total_data[,562])
c <- train_activities == total_data3[2948:10299,5]
all(c)
View(total_data3)
c <- train_activities == total_data3[1:2947,5]
all(c)
c <- train_activities == total_data[2948:10299],5]
c <- train_activities == total_data[2948:10299,5]
c
z <- total_data[,562]
z
summary(z)
class(z)
class(train_activities)
z <- train_activities[,1]
class(z)
x <- total_data3[,67]
all(z == x)
all(z == x[2948:10299,])
c <- z == x[2948:10299,]
dim(x)
x
c <- z == x[2948:10299]
all(c)
train_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/X_train.txt',
sep = '')
train_activities <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/train/y_train.txt',
sep = "")
list_of_features <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/features.txt',
sep = "")
num_of_train_data_col <- dim(train_data)[2]
list_of_features$V2 <- as.character(list_of_features$V2)
for(i in 1:num_of_train_data_col) {
names(train_data)[i] <- list_of_features[i,2]
}
total_train_data <- cbind(train_data, train_activities)
# Gather test data and the column names.
test_data <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/test/X_test.txt',
sep = '')
test_activities <- read.table('C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/UCI Har Dataset/test/y_test.txt',
sep = '')
num_of_test_data_col <- dim(test_data)[2]
for(i in 1:num_of_test_data_col) {
names(test_data)[i] <- list_of_features[i,2]
}
total_test_data <- cbind(test_data, test_activities)
# Merge the two data sets together
total_data <- rbind(total_test_data, total_train_data)
## Extracts only the measurements on the mean and standard deviation for each
## measurement.
# Extract all column names.
data_col <- names(total_data)
# Get a vector of all the column names that contain mean or std.
has_mean_or_std <- grep("mean\\()|std\\()", data_col)
# Use the previous vector to subset the total_data
total_data2 <- total_data[,has_mean_or_std]
## Use descriptive activity names to names the activities in the data set.
# Readd the activities col to total_data2
total_data3 <- cbind(total_data2, total_data[,562])
z <- total_data[,562]
x <- train_activities
class(x)
x[,]
class(x[,])
z <- total_data3[,67]
x <- train_activities[,]
c <- z[2948:10299] == x
all(c)
z <- train_activities
table(z)
gsub(1, "WALKING", z)
z
total_data3[,67] <- gsub(1, "WALKING", total_data3)
View(total_data3)
total_data3[,67]
z <-total_data3[,67]
z <- gsub(1, "WALKING", z)
z <- gsub(5, "STANDING", z)
x <- total_data3
x[,67] <- gsub(5, "STANDING", x[,67])
table(x[,67])
total_data3 <- cbind(total_data2, total_data[,562])
total_data3[,67] <- gsub(1, "WALKING", total_data3[,67])
total_data3[,67] <- gsub(2, "WALKING_UPSTAIRS", total_data3[,67])
total_data3[,67] <- gsub(3, "WALKING_DOWNSTAIRS", total_data3[,67])
total_data3[,67] <- gsub(4, "SITTING", total_data3[,67])
total_data3[,67] <- gsub(5, "STANDING", total_data3[,67])
total_data3[,67] <- gsub(6, "LAYING", total_data3[,67])
View(total_data3)
View(total_data3)
a <- total_data3
class(a)
colnames(a) <- c('test')
View(a)
colnames(total_data3) <- c('Body Accelerometer X-axis Mean',
'Body Accelerometer Y-axis Mean',
'Body Accelerometer Z-axis Mean',
'Body Accelerometer X-axis StdDev',
'Body Accelerometer Y-axis StdDev',
'Body Accelerometer Z-axis StdDev',
'Gravity Accelerometer X-axis Mean',
'Gravity Accelerometer Y-axis Mean',
'Gravity Accelerometer Z-axis Mean',
'Gravity Accelerometer X-axis StdDev',
'Gravity Accelerometer Y-axis StdDev',
'Gravity Accelerometer Z-axis StdDev',
'Body Accelerometer Jerk X-axis Mean',
'Body Accelerometer Jerk Y-axis Mean',
'Body Accelerometer Jerk Z-axis Mean',
'Body Accelerometer Jerk X-axis StdDev',
'Body Accelerometer Jerk Y-axis StdDev',
'Body Accelerometer Jerk Z-axis StdDev',
'Body Gyroscope X-axis Mean',
'Body Gyroscope Y-axis Mean',
'Body Gyroscope Z-axis Mean',
'Body Gyroscope X-axis StdDev',
'Body Gyroscope Y-axis StdDev',
'Body Gyroscope Z-axis StdDev',
'Body Gyroscope Jerk X-axis Mean',
'Body Gyroscope Jerk Y-axis Mean',
'Body Gyroscope Jerk Z-axis Mean',
'Body Gyroscope Jerk X-axis StdDev',
'Body Gyroscope Jerk Y-axis StdDev',
'Body Gyroscope Jerk Z-axis StdDev',
'Body Accelerometer Magnitude Mean',
'Body Accelerometer Magnitude StdDev',
'Gravity Accerlation Magnitude Mean',
'Gravity Accerlation Magnitude StdDev',
'Body Accelerometer Jerk Magnitude Mean',
'Body Accelerometer Jerk Magnitude StdDev',
'Body Gryoscope Magnitude Mean',
'Body Gryoscope Magnitude StdDev',
'Body Gryoscope Jerk Magnitude Mean',
'Body Gryoscope Jerk Magnitude StdDev',
'Fourier Transform Body Accelerometer X-axis Mean',
'Fourier Transform Body Accelerometer Y-axis Mean',
'Fourier Transform Body Accelerometer Z-axis Mean',
'Fourier Transform Body Accelerometer X-axis StdDev',
'Fourier Transform Body Accelerometer Y-axis StdDev',
'Fourier Transform Body Accelerometer Z-axis StdDev',
'Fourier Transform Body Accelerometer Jerk X-axis Mean',
'Fourier Transform Body Accelerometer Jerk Y-axis Mean',
'Fourier Transform Body Accelerometer Jerk Z-axis Mean',
'Fourier Transform Body Accelerometer Jerk X-axis StdDev',
'Fourier Transform Body Accelerometer Jerk Y-axis StdDev',
'Fourier Transform Body Accelerometer Jerk Z-axis StdDev',
'Fourier Body Gyroscope X-axis Mean',
'Fourier Body Gyroscope Y-axis Mean',
'Fourier Body Gyroscope Z-axis Mean',
'Fourier Body Gyroscope X-axis StdDev',
'Fourier Body Gyroscope Y-axis StdDev',
'Fourier Body Gyroscope Z-axis StdDev',
'Fourier Body Accelerometer Magnitude Mean',
'Fourier Body Accelerometer Magnitude StdDev',
'Fourier Body Accelerometer Jerk Magnitude Mean',
'Fourier Body Accelerometer Jerk Magnitude StdDev',
'Fourier Body Gyroscope Magnitude Mean',
'Fourier Body Gyroscope Magnitude StdDev',
'Fourier Body Gyroscope Jerk Magnitude Mean',
'Fourier Body Gyroscope Jerk Magnitude StdDev',
'Activity')
View(total_data3)
data_col2 <- names(total_data3)
# Get a vector of all the column names that contain mean or std.
has_mean <- grep("mean\\()", data_col2)
# Use the previous vector to subset the total_data
total_data4 <- total_data3[,has_mean]
# Readd the activities col to total_data4
total_data4 <- cbind(total_data4, total_data3[,67])
View(total_data4)
class(data_col2)
grep("mean\\()", data_col2)
has_mean <- grep("[Mm]ean", data_col2)
total_data4 <- total_data3[,has_mean]
# Readd the activities col to total_data4
total_data4 <- cbind(total_data4, total_data3[,67])
View(total_data4)
total_data4 <- cbind(total_data4, Activities = total_data3[,67])
View(total_data4)
View(total_data3)
data_col2 <- names(total_data3)
# Get a vector of all the column names that contain mean or std.
has_mean <- grep("[Mm]ean", data_col2)
# Use the previous vector to subset the total_data
total_data4 <- total_data3[,has_mean]
# Readd the activities col to total_data4
total_data4 <- cbind(total_data4, Activity = total_data3[,67])
View(total_data4)
setwd("C:/Users/littlesiagoy/Google Drive/Improve/Code/Coursera/Cleaning and Getting Data/Getting-and-Clenaing-Data-Course-Project")
a <- run_analysis
run_analysis <- function() {
# Gather training data and the column names.
train_data <- read.table('X_train.txt',
sep = '')
train_activities <- read.table('y_train.txt',
sep = "")
list_of_features <- read.table('features.txt',
sep = "")
num_of_train_data_col <- dim(train_data)[2]
list_of_features$V2 <- as.character(list_of_features$V2)
for(i in 1:num_of_train_data_col) {
names(train_data)[i] <- list_of_features[i,2]
}
total_train_data <- cbind(train_data, train_activities)
# Gather test data and the column names.
test_data <- read.table('X_test.txt',
sep = '')
test_activities <- read.table('y_test.txt',
sep = '')
num_of_test_data_col <- dim(test_data)[2]
for(i in 1:num_of_test_data_col) {
names(test_data)[i] <- list_of_features[i,2]
}
total_test_data <- cbind(test_data, test_activities)
# Merge the two data sets together
total_data <- rbind(total_test_data, total_train_data)
## Extracts only the measurements on the mean and standard deviation for each
## measurement.
# Extract all column names.
data_col <- names(total_data)
# Get a vector of all the column names that contain mean or std.
has_mean_or_std <- grep("mean\\()|std\\()", data_col)
# Use the previous vector to subset the total_data
total_data2 <- total_data[,has_mean_or_std]
## Use descriptive activity names to names the activities in the data set.
# Readd the activities col to total_data2
total_data3 <- cbind(total_data2, total_data[,562])
total_data3[,67] <- gsub(1, "WALKING", total_data3[,67])
total_data3[,67] <- gsub(2, "WALKING_UPSTAIRS", total_data3[,67])
total_data3[,67] <- gsub(3, "WALKING_DOWNSTAIRS", total_data3[,67])
total_data3[,67] <- gsub(4, "SITTING", total_data3[,67])
total_data3[,67] <- gsub(5, "STANDING", total_data3[,67])
total_data3[,67] <- gsub(6, "LAYING", total_data3[,67])
## Appropriately label the data set with descriptive variable names.
colnames(total_data3) <- c('Body Accelerometer X-axis Mean',
'Body Accelerometer Y-axis Mean',
'Body Accelerometer Z-axis Mean',
'Body Accelerometer X-axis StdDev',
'Body Accelerometer Y-axis StdDev',
'Body Accelerometer Z-axis StdDev',
'Gravity Accelerometer X-axis Mean',
'Gravity Accelerometer Y-axis Mean',
'Gravity Accelerometer Z-axis Mean',
'Gravity Accelerometer X-axis StdDev',
'Gravity Accelerometer Y-axis StdDev',
'Gravity Accelerometer Z-axis StdDev',
'Body Accelerometer Jerk X-axis Mean',
'Body Accelerometer Jerk Y-axis Mean',
'Body Accelerometer Jerk Z-axis Mean',
'Body Accelerometer Jerk X-axis StdDev',
'Body Accelerometer Jerk Y-axis StdDev',
'Body Accelerometer Jerk Z-axis StdDev',
'Body Gyroscope X-axis Mean',
'Body Gyroscope Y-axis Mean',
'Body Gyroscope Z-axis Mean',
'Body Gyroscope X-axis StdDev',
'Body Gyroscope Y-axis StdDev',
'Body Gyroscope Z-axis StdDev',
'Body Gyroscope Jerk X-axis Mean',
'Body Gyroscope Jerk Y-axis Mean',
'Body Gyroscope Jerk Z-axis Mean',
'Body Gyroscope Jerk X-axis StdDev',
'Body Gyroscope Jerk Y-axis StdDev',
'Body Gyroscope Jerk Z-axis StdDev',
'Body Accelerometer Magnitude Mean',
'Body Accelerometer Magnitude StdDev',
'Gravity Accerlation Magnitude Mean',
'Gravity Accerlation Magnitude StdDev',
'Body Accelerometer Jerk Magnitude Mean',
'Body Accelerometer Jerk Magnitude StdDev',
'Body Gryoscope Magnitude Mean',
'Body Gryoscope Magnitude StdDev',
'Body Gryoscope Jerk Magnitude Mean',
'Body Gryoscope Jerk Magnitude StdDev',
'Fourier Transform Body Accelerometer X-axis Mean',
'Fourier Transform Body Accelerometer Y-axis Mean',
'Fourier Transform Body Accelerometer Z-axis Mean',
'Fourier Transform Body Accelerometer X-axis StdDev',
'Fourier Transform Body Accelerometer Y-axis StdDev',
'Fourier Transform Body Accelerometer Z-axis StdDev',
'Fourier Transform Body Accelerometer Jerk X-axis Mean',
'Fourier Transform Body Accelerometer Jerk Y-axis Mean',
'Fourier Transform Body Accelerometer Jerk Z-axis Mean',
'Fourier Transform Body Accelerometer Jerk X-axis StdDev',
'Fourier Transform Body Accelerometer Jerk Y-axis StdDev',
'Fourier Transform Body Accelerometer Jerk Z-axis StdDev',
'Fourier Body Gyroscope X-axis Mean',
'Fourier Body Gyroscope Y-axis Mean',
'Fourier Body Gyroscope Z-axis Mean',
'Fourier Body Gyroscope X-axis StdDev',
'Fourier Body Gyroscope Y-axis StdDev',
'Fourier Body Gyroscope Z-axis StdDev',
'Fourier Body Accelerometer Magnitude Mean',
'Fourier Body Accelerometer Magnitude StdDev',
'Fourier Body Accelerometer Jerk Magnitude Mean',
'Fourier Body Accelerometer Jerk Magnitude StdDev',
'Fourier Body Gyroscope Magnitude Mean',
'Fourier Body Gyroscope Magnitude StdDev',
'Fourier Body Gyroscope Jerk Magnitude Mean',
'Fourier Body Gyroscope Jerk Magnitude StdDev',
'Activity')
## Create a second, independent tidy data set with the average of each
## variable for each activity and each subject.
# Extract all column names.
data_col2 <- names(total_data3)
# Get a vector of all the column names that contain mean or std.
has_mean <- grep("[Mm]ean", data_col2)
# Use the previous vector to subset the total_data
total_data4 <- total_data3[,has_mean]
# Readd the activities col to total_data4
total_data4 <- cbind(total_data4, Activity = total_data3[,67])
write.table(total_data4, 'tidy_data.txt', row.name = FALSE)
}
a <- run_analysis()
